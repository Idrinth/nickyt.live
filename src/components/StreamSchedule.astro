---
import {
  getLocalizedDate,
  getHeadingId,
  getStreamLinks,
} from "../utils/schedule-utils";
import WebsiteLink from "./WebsiteLink.astro";
import TwitterLink from "./TwitterLink.astro";
import GitHubLink from "./GitHubLink.astro";
import TwitchLink from "./TwitchLink.astro";
import YouTubeLink from "./YouTubeLink.astro";

export interface StreamGuestInfo {
  date: string;
  streamTitle: string;
  streamDescription: string;
  youtubeStreamLink?: string;
  name: string;
  title?: string;
  twitter?: string;
  youtube?: string;
  twitch?: string;
  github?: string;
  website?: string;
}

interface Props {
  locale: string;
  timezone: string;
  schedule: StreamGuestInfo[];
}

const { locale, timezone, schedule } = Astro.props;
---

<ul class="flex flex-col">
  {
    schedule.map(
      ({
        date,
        streamTitle,
        streamDescription,
        youtubeStreamLink,
        name,
        title,
        twitter,
        website,
        twitch,
        youtube,
        github,
      }) => {
        const guestDate = getLocalizedDate({
          date,
          locale,
          timezone,
          showTime: true,
        });
        const headingId = getHeadingId(name, date);

        return (
          <li>
            <h2 id={headingId}>{streamTitle}</h2>
            <time datetime={date}>{guestDate}</time>
            <div>
              {github === "nickytonline" ? null : (
                <div>
                  Guest: {name}
                  {title ? `, ${title}` : null}
                </div>
              )}
            </div>
            {streamDescription ? <p set:html={streamDescription} /> : null}

            <nav class="nav" aria-label="Links for live stream guest ${name}">
              <ul class="flex gap-2 items-center">
                {website ? (
                  <li>
                    <WebsiteLink name={name} url={website} />
                  </li>
                ) : null}
                {github ? (
                  <li>
                    <GitHubLink name={name} url={github} />
                  </li>
                ) : null}
                {twitter ? (
                  <li>
                    <TwitterLink name={name} url={twitter} />
                  </li>
                ) : null}

                {twitch ? (
                  <li>
                    <TwitchLink name={name} url={twitch} />
                  </li>
                ) : null}
                {youtube ? (
                  <li>
                    <YouTubeLink name={name} url={youtube} />
                  </li>
                ) : null}
              </ul>
            </nav>
            {youtubeStreamLink ? getStreamLinks(youtubeStreamLink) : null}
          </li>
        );
      }
    )
  }
</ul>
